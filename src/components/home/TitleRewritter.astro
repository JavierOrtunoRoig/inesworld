---
const { texts } = Astro.props;
---

<p class="typewrite flex text-3xl md:text-6xl" data-period="2000" data-type=`${JSON.stringify(texts)}`>
	<span class="wrap"></span>
	<span class="tick"></span>
</p>

<style>
	@keyframes caret {
		50% {
			border-color: transparent;
		}
	}

	.typewrite span.tick {
		border-right: 0.08em solid #fff;
		animation: caret 1s steps(1) infinite;
	}

	.wrap:empty:before {
		content: "\200b"; /* unicode zero width space character */
	}
</style>

<script>
	var TxtType = function (el, toRotate, period) {
		this.toRotate = toRotate;
		this.el = el;
		this.loopNum = 0;
		this.period = parseInt(period, 10) || 2000;
		this.txt = "";
		this.tick();
		this.isDeleting = false;
	};

	TxtType.prototype.tick = function () {
		var i = this.loopNum % this.toRotate.length;
		var fullTxt = this.toRotate[i];

		if (this.isDeleting) {
			this.txt = fullTxt.substring(0, this.txt.length - 1);
		} else {
			this.txt = fullTxt.substring(0, this.txt.length + 1);
		}

		const wrap = document.querySelector(".typewrite > .wrap");

		if (wrap) {
			wrap.textContent = this.txt;
		} 

		var that = this;
		var delta = 200 - Math.random() * 100;

		if (this.isDeleting) {
			delta /= 2;
		}

		if (!this.isDeleting && this.txt === fullTxt) {
			delta = this.period;
			this.isDeleting = true;
		} else if (this.isDeleting && this.txt === "") {
			this.isDeleting = false;
			this.loopNum++;
			delta = 500;
		}

		const timeoutId = setTimeout(function () {
			that.tick();
		}, delta);

		window.lastTimeoutId = timeoutId;
	};
	const loadScript = () => {
		// this is a workaround to avoid multiple instances of the typewrite effect when navigating between different languages
		if (window.lastTimeoutId) {
			clearTimeout(window.lastTimeoutId);
		}

		var elements = document.getElementsByClassName("typewrite");
		
		for (var i = 0; i < elements.length; i++) {
			var toRotate = elements[i].getAttribute("data-type");
			var period = elements[i].getAttribute("data-period");
			if (toRotate) {
				new TxtType(elements[i], JSON.parse(toRotate), period);
			}
		}
	};

	document.addEventListener("astro:page-load", loadScript);
</script>
