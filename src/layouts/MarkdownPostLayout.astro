---
import Footer from "@/components/Footer.astro";
import MyImage from "@/components/MyImage.astro";
import Navbar from "@/components/Navbar.astro";
import "@/global.css";
import { getValidPosts } from "@/helpers/posts";
import "@fontsource/roboto";
import { HeadHrefLangs } from "astro-i18next/components";
import { getCollection } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import i18next from "i18next";

interface Post {
	id: string;
	slug: string;
	body: string;
	collection: string;
	data: {
		title: string;
		pubDate: Date;
		draft: boolean;
		tags?: string[] | undefined;
		image?:
			| {
					src?: string | undefined;
					alt?: string | undefined;
			  }
			| undefined;
	};
}

const { frontmatter, slug } = Astro.props;
const { minutesRead } = Astro.props.frontmatter;

// I want to get all posts in the project and get the next and previous post to add a link to them
const allPosts = await getCollection("blogs");
const posts: Post[] = getValidPosts(allPosts);
const currentPostIndex = posts.findIndex((post) => post.slug === slug);
const previousPost = posts[currentPostIndex - 1];
const nextPost = posts[currentPostIndex + 1];
---

<html lang={i18next.language}>
	<head>
		<meta name="google-site-verification" content="5GRhhm_YYdtAFIMnUytnZRT8Dwghpw9EKt428qz0IhY" />
		<meta charset="utf-8" />
		<link rel="sitemap" href="/sitemap-index.xml" />

		<!-- favicons generated with https://realfavicongenerator.net/ -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/site.webmanifest" />
		<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
		<meta name="msapplication-TileColor" content="#da532c" />
		<!-- ⬇️⬇️ to set color for mobiles bars -->
		<meta name="theme-color" content="#000000" />

		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={frontmatter.description} />
		<meta
			name="keywords"
			content="Inés Cuevas Jiménez, inesworld, ines world, portfolio, photography, travel, trips, world"
		/>
		<meta name="author" content="Inés Cuevas Jiménez, inesworld, ines world" />
		<meta name="robots" content="index, follow" />

		<meta property="og:title" content="Inesworld | Ines Cuevas Jiménez" />
		<meta
			property="og:description"
			content="Inés Cuevas Jiménez portfolio. Come to discover the world through my photos."
		/>
		<meta property="og:url" content="https://inesworld.vercel.app/" />
		<meta property="og:type" content="website" />
		<meta property="og:image" content="https://inesworld.vercel.app/ines.jpeg" />
		<meta property="og:site_name" content="Inesworld Portfolio" />
		<meta property="og:locale" content="en_EN" />

		<HeadHrefLangs />

		<slot name="custom-header-scripts" />

		<title>Inesworld</title>
		<ViewTransitions />
	</head>
	<body>
		<Navbar />

		<div class="info">
			<h1 class="title">{frontmatter.title}</h1>
			<p class="read-time">{minutesRead}</p>
			<!-- render tags -->
			{
				frontmatter.tags && (
					<div class="tags">
						{frontmatter.tags.map((tag) => (
							<span>#{tag} </span>
						))}
					</div>
				)
			}
			<MyImage
				class="my-4 w-full max-w-[800px] rounded-lg"
				imagePath={frontmatter.image.src}
				altText={frontmatter.image.alt}
			/>
			<!-- <img src={frontmatter.image.src} alt={frontmatter.image.alt} /> -->
		</div>

		<article class="post-content">
			<slot />
			<div class="other-posts">
				{nextPost && <a href={nextPost.slug}>&larr; {nextPost.data.title}</a>}
				{
					previousPost && (
						<a class="previous-post" href={previousPost.slug}>
							{previousPost.data.title} &rarr;
						</a>
					)
				}
			</div>
		</article>

		<Footer />

		<style>
			body,
			html {
				width: 100%;
			}

			.post-content {
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				max-width: 800px;
				margin: 0 auto;
				padding: 1rem;
				overflow-x: hidden;

				strong,
				del {
					color: var(--special-text-color);
				}

				h1 {
					font-size: 2rem;
					margin-top: 0;
				}
				h1,
				h2,
				h3,
				h4,
				h5,
				h6 {
					align-self: flex-start;
					font-weight: 900;
				}

				h2 {
					font-size: 1.5rem;
				}

				h3 {
					font-size: 1.25rem;
				}

				h4 {
					font-size: 1.1rem;
				}

				h5 {
					font-size: 1rem;
				}

				h6 {
					font-size: 0.9rem;
				}

				p {
					font-size: 1rem;
					line-height: 1.5;
					margin: 1rem 0;
				}
			}

			a {
				color: var(--special-text-color);
				text-decoration-color: var(--special-text-color);
				transition: color 0.2s;

				&:hover {
					color: var(--quaternary-color);
					text-decoration-color: var(--quaternary-color);
				}
			}

			.info {
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				padding: 3rem;

				& > .title {
					font-size: 3rem;
					margin: 0;
					text-align: center;
				}

				& > .read-time {
					margin: 0.5em;
					font-size: 1.2rem;
					/* color: var(--tertiary-color); */
				}

				& > .tags {
					display: flex;
					flex-wrap: wrap;
					justify-content: center;

					& > span {
						margin: 0 0.2rem;
						/* color: var(--tertiary-color); */
					}
				}
			}

			.other-posts {
				display: flex;
				flex-direction: column;
				justify-content: space-between;
				width: 100%;
				margin: 1rem 0;

				& .previous-post {
					align-self: flex-end;
				}
			}
		</style>
		<style is:global>
			body {
				font-family: "Roboto", sans-serif;
			}
		</style>
	</body>
</html>
