---
import BasicLayout from "@/layouts/BasicLayout.astro";
---

<BasicLayout>
  <div class="contact-container flex flex-col items-center justify-center p-4">
    <h1 class="title">Contact with me!</h1>
    <p>
      Maybe here we can put a text giving thanks to users or any message that
      Ines want to share
    </p>
    <form class="pt-4">
      <div class="form-field">
        <label class="text-xl" for="from_name">Name:</label>
        <input
          class="p-2 rounded-lg"
          type="text"
          id="name"
          name="from_name"
          required
        />
      </div>
      <div class="form-field">
        <label class="text-xl" for="to_email">Email:</label>
        <input
          class="p-2 rounded-lg"
          type="email"
          id="email"
          name="to_email"
          required
        />
      </div>
      <div class="form-field">
        <label class="text-xl" for="message">Message:</label>
        <textarea class="p-2 rounded-lg" id="message" name="message" required
        ></textarea>
      </div>
      <button type="submit">Send</button>
    </form>
  </div>
</BasicLayout>

<script>
  import { init, send } from "@emailjs/browser";
  import Swal from "sweetalert2";

  const runScript = () => {
    const form = document.querySelector("form") as HTMLFormElement;
    if (!form) return;

    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(form);

      /* 
        In the web template:
        - From name: Es el nombre de la persona que envía el mensaje, aparecerá como nombre de la persona que envía el correo, EN LA PREVIEW DEL CORREO

        from email: el email del servicio usado. en este caso el mio de google
        Con reply to podemos enviar otro correo al que mandó el formulario
      */

      // to_email will be inserted in the email body linked to {{to_email}}
      // from_name will be inserted in the email body linked to {{from_name}}
      // message will be inserted in the email body linked to {{message}}
      const data = {
        to_email: formData.get("to_email"),
        from_name: formData.get("from_name"),
        message: formData.get("message"),
      };

      init({
        publicKey: "Zysq_8MGlqpjcijD4",
        limitRate: {
          // Allow 1 request per 10s
          throttle: 10000,
        },
      });

      Swal.fire({
        title: "Sending email...",
        didOpen: () => {
          Swal.showLoading();
        },
      });

      send("service_3r6y8dq", "template_d3rlfnk", data).then(
        (response) => {
          Swal.close();
          Swal.fire({
            title: "Email sent! I will contact you soon!",
            icon: "success",
          });
        },
        (error) => {
          Swal.close();
          Swal.fire({
            title: "Error sending email",
            icon: "error",
            didOpen: () => {
              setTimeout(() => {
                Swal.close();
              }, 2000);
            },
          });
        },
      );
    });
  };

  document.addEventListener("astro:page-load", runScript);
</script>

<style>
  .form-field {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    max-width: 400px;

    button {
      padding: 0.5rem;
      border: none;
      border-radius: 0.5rem;
      background-color: var(--secondary-color);
      color: var(--background-color);
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.2s;

      &:hover {
        background-color: var(--quaternary-color);
      }
    }
  }
</style>
